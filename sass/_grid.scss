$offset: $offset/100;

/* Grid with margins and border */
.container{ 
 	width: $pageWidth; 
 	overflow: hidden;
 	margin: auto;
 	color: $textColor;
 }
.row{
	overflow:hidden;
	clear: both;
	@include clearfix;
}
.col{
  float:left;
  overflow: hidden;
}
/*main "default" grid*/
@for $i from 1 through $numCols {
  .#{$classSlug}#{$i}{
    $xwidth : percentage($i/$numCols);
	width: $xwidth - ($gutter * 98); 
	// because the gutter is a percentage width, the var is exprssed as a decimal, this number multiplied by the decimal provides the optimum collumn width.
	margin-left: percentage($gutter);
	//express gutter as percentage
        &:first-child{
        margin-left:0;/*remove margin from every first element in a row */
        }
    }
}
/* no margin */

@for $i from 1 through $numCols {
  .#{$classSlug}#{$i}-#{$no-margin}{
    $xwidth : percentage($i/$numCols);
	width: $xwidth;
  margin-left:0;
  }
}
/* with a border */
@for $i from 1 through $numCols {
  .#{$addBorder}-#{$classSlug}#{$i}{
    $xwidth : percentage($i/$numCols);
    @include addBorder(1px, $borderStyle, $borderColor, $offset, $xwidth);
  }
}
//.span1.right{ 
//	left: percentage($colWidth);
//}
/*pull and push*/
@for $i from 1 through $numCols {
  .#{$right}-#{$classSlug}#{$i}{
    $xwidth : percentage($i/$numCols);
	left: $hundred - $xwidth;
         //@include clearfix;
	width: $xwidth;
        
	    }
}
@for $i from 1 through $numCols {
  .#{$left}-#{$classSlug}#{$i}{
    $xwidth : percentage($i/$numCols);
	left: ($hundred - $xwidth) * -1;
         //@include clearfix;
	width: $xwidth;
	  }
}
/*offset*/
@for $i from 1 through $numCols {
#{$offsetSlug}#{$i}{
    $xwidth : percentage($i/$numCols);
	margin-left: $xwidth;
  }
}

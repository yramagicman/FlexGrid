/* @group global classes */
// grid definitions
@import "mixins.scss";
$pageWidth: 100%;
$desktopPageWidth: $pageWidth;
$ipadPageWidthPortrait: 100%;
$ipadPageWidthLandscape: 100%;
$numCols: 12;
$gutter: 0.02;
$offset: 5.5;


// classes
$classSlug: span !default;
$no-margin: no-margin !default;
$addBorder: add-border !default;
$push: push !default;
$pull: pull !default;
$offsetSlug: offset !default;

.container {
  overflow: hidden;
  margin: auto;
  position: relative;
}

.row {
//  overflow: hidden;
  clear: both;
  position: relative;
  width: 100%;
  @include clearfix;
}

.col {
  float: left;
  overflow: hidden;
  position: relative;
  box-sizing: border-box;
}

/* @end */
/* @group default grid*/
@for $i from 1 through $numCols {
  .#{$classSlug}#{$i} {
    $xwidth: percentage($i / $numCols);
    margin: 0 percentage($gutter/2);
    width: $xwidth - $gutter * 100;
    // because the gutter is a percentage width, the var is exprssed as a decimal, this number multiplied by the decimal provides the optimum collumn width.
 
  }
}

/* remove margins from every first child */
//.span1:last-child {
//  margin-right: 0;
//}
//
//@for $i from 1 through $numCols {
//  .#{$classSlug}#{$i}:last-child {
//    @extend .span1:last-child;
//  }
//}

/* @end */
/* @group no margin */
//@for $i from 1 through $numCols {
//  .#{$classSlug}#{$i}-#{$no-margin} {
//    $xwidth: percentage($i / $numCols);
//    width: $xwidth;
//    margin: 0;
//  }
//}

/* @end */
/* @group with a border */
.#{$addBorder} {
  @include addBorder(1px, $borderStyle, $borderColor);
}
/* @end */
/* @group pull and push*/
@for $i from 1 through $numCols {
  .#{$pull}-#{$classSlug}#{$i} {
    $xwidth: percentage($i / $numCols);
    $offsetPos: $xwidth;
    left: 100 - $xwidth;
    width: $xwidth;
    margin-left: 0;
 
  }
}

@for $i from 1 through $numCols {
  .#{$push}-#{$classSlug}#{$i} {
    $xwidth: percentage($i / $numCols);
    $offsetPos: $xwidth;
    left: (100 - $xwidth) * -1;
    //@include clearfix;
    width: $xwidth - $gutter * 98;
    margin-left: 0;
 
  }
}

/* @end */
/* @group offset*/
@for $i from 1 through $numCols - 1 {
  .#{$offsetSlug}#{$i} {
    $xwidth: percentage($i / $numCols);
    margin-left: $xwidth;
//    margin-right: percentage( $gutter * -1);
  }
}
/* @end */
